{"version":3,"sources":["App.js","App2.js","Movie.js","App3.js","index.js"],"names":["App","React","Component","Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App3","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","ReactDOM","render","document","getElementById"],"mappings":"2OA4FeA,I,sCCzFIC,IAAMC,U,8CC8BVC,MA7Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,yBAAKC,UAAU,SACb,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,eACb,wBAAIA,UAAU,gBAAgBJ,GAC9B,wBAAII,UAAU,eAAeL,GAC7B,wBAAIK,UAAU,iBACXD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,wBAAIC,IAAKD,EAAOL,UAAU,iBACvBI,OAIP,uBAAGJ,UAAU,kBAAkBH,EAAQU,MAAM,EAAE,KAA/C,UC8DOC,G,iNAxEbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAGVC,U,sBAAY,8BAAAC,EAAA,sEAWAC,IAAMC,IAAI,4DAXV,gBASEJ,EATF,EAQRK,KACEA,KAAQL,OAIZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAbzB,2C,mFAiBVQ,KAAKN,c,+BASE,MAEuBM,KAAKT,MAA3BC,EAFD,EAECA,UAAWC,EAFZ,EAEYA,OAEnB,OACE,6BAASX,UAAU,aAChBU,EACC,yBAAKV,UAAU,UACb,0BAAMA,UAAU,gBAAhB,iBAEA,yBAAKA,UAAU,UACZW,EAAOR,KAAI,SAAAgB,GAAK,OACf,kBAAC,EAAD,CACEb,IAAKa,EAAMC,GACXA,GAAID,EAAMC,GACVzB,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAME,mBACdtB,OAAQoB,EAAMpB,kB,GAnDbP,IAAMC,YCDzB6B,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.732f1d0e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\n// import Potato from \"./Potato\";\n\n\n\nconst foodLike  = [\n  {\n    id :1,\n    name : \"kimchi\",\n    image : \"http://m.hansanggung.com/web/product/big/hansanggung1_44.jpg\",\n    rating : 5.0\n  },\n  {\n    id :2,\n    name : \"ramen\",\n    image : \"http://imgnews.naver.net/image/382/2014/12/21/68697033.2_99_20141221132203.jpg\",\n    rating : 4.9\n  },\n  {\n    id :3,\n    name : \"samgiopsal\",\n    image : \"https://img1.daumcdn.net/thumb/R720x0/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fliveboard%2Fdailylife%2F222d88e5c7dc496c8e8a8a56c3452e52.JPG\",\n    rating : 4.4\n  }\n  ,\n  {\n    id :4,\n    name : \"chukumi\",\n    image : \"https://craftlog.com/m/i/5979130=s1280=h960.webp\",\n    rating : 4.7\n  }\n  ,\n  {\n    id :5,\n    name : \"ckicken\",\n    image : \"https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2F20161021_163%2Fkjwkkht1125_1477007862250IDRkB_PNG%2Fclzlsajrwkclaor_%25281%2529.png&type=b400\",\n    rating : 4.4\n  }\n]\n\n//반드시 전역변수로 받아서 넘겨줘야한다.\nfunction Food ({name, picture, rating})\n{\n  //console.log({fav})\n  //console.log(prob.fav);\n  return (\n    <div>\n    <h1>I Like {name}</h1>\n    <h4>{rating}/5.0</h4>\n    <img src = {picture} alt = {name}/>\n    </div>\n  )\n}\n//porptypes는 type 형태를 체크할 수있다.\nFood.propTypes ={\n  name : PropTypes.string.isRequired,\n  picture : PropTypes.string.isRequired,\n  rating : PropTypes.number.isRequired\n};\n\n\n// function renderFood (dish)\n// {\n//   //console.log(dish);\n//   return <Food name = {dish.name} picture = {dish.image}/>\n// }\nfunction App() {\n  return (\n    <div className=\"App\">\n     {/* <h1>Hello!!</h1>\n     <Food fav = \"kimchi\" prob = {true} dfjdjfdj = {[1,2,3,4,\"hello\"]}/>\n     <Food fav = \"ramen\" prob = {true} dfjdjfdj = {[1,2,3,4,\"hello\"]}/>\n     <Food fav = \"samgiopsal\" prob = {true} dfjdjfdj = {[1,2,3,4,\"hello\"]}/>\n     <Food fav = \"chukumi\" prob = {true} dfjdjfdj = {[1,2,3,4,\"hello\"]}/> */}\n    {/* {foodLike.map(renderFood)} */}\n\n     {\n      //foodlike의 값들을 dish로 받아서 뿌려준다.\n     foodLike.map(dish =>\n     <Food \n        key = {dish.id} \n        name = {dish.name} \n        picture = {dish.image}\n        rating = {dish.rating}\n     />)\n     }\n    </div>\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n//하나의 클래스 컴포넌트로 뭉쳐서 함수들을 각각 호출한다.\nclass App2 extends React.Component{\n  state = {\n    count:0\n  };\n\n  add = () => {\n    // console.log(\"add\");\n    //current 를 통해서 state의 현재 값을 가져오도록 한다.\n    this.setState(current =>({ count: current.count +1 }));\n    // this.setState({ count: this.state.count  +1 });\n    // this.state.count = 1; // 직접 state를 변경 혹은 수정하면 안된다.\n  };\n  minus = () => {\n    this.setState(current => ({ count: current.count -1 }));\n    // this.setState({ count: this.state.count  -1 });\n    // console.log(\"minus\");\n  };\n  //load 후 func\n  componentDidMount(){\n    console.log(\"Mounted!\")\n  };\n  //update 이후 func\n  componentDidUpdate(){\n    console.log(\"updated!!\")\n  };\n  //componet가 끝날때 실행되는 func (다른페이지 이동시에만)\n  componentWillUnmount(){\n    console.log(\"Goodbye, cruel world.\")\n  }\n  render(){\n    console.log(\"Im rendering\");\n    return(\n      <div>\n        <h1> Im a class componet </h1>\n        <h1> The number is : {this.state.count}</h1>\n        <button onClick={this.add}>Add</button>\n        <button onClick={this.minus}>Minus</button>\n      </div>\n    )\n  }\n}\n\nexport default App2;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movies.css\";\r\n\r\nfunction Movie({ year, title, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <img src={poster} alt={title} title={title} />\r\n      <div className=\"movie__data\">\r\n        <h3 className=\"movie__title\">{title}</h3>\r\n        <h5 className=\"movie__year\">{year}</h5>\r\n        <ul className=\"movie__genres\">\r\n          {genres.map((genre, index) => (\r\n            <li key={index} className=\"genres__genre\">\r\n              {genre}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <p className=\"movie__summary\">{summary.slice(0,180)}...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired\r\n};\r\n\r\nexport default Movie;\r\n\r\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\n//하나의 클래스 컴포넌트로 뭉쳐서 함수들을 각각 호출한다.\nclass App3 extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n  //asycn 는 비동기 함수라고 지정하는 명령어\n  getMovies = async () => {\n\n    //await는 기다렸다가 진행하라는 뜻\n    //const movies = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n\n    //console.log(movies.data.data.movies);\n    //위의 동작을 아래와 같이 es6를 사용하여 바꿀수 있다.\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    //console.log(movies);\n    this.setState({ movies, isLoading: false })\n    //this.setState({movies:movies}) // 둘다 같은\n  }\n  componentDidMount() {\n    this.getMovies();\n\n    //timeout을줘서 단순 데이터 오는거 확인\n    // const movies = axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n    // setTimeout(() => {\n    //   this.setState({isLoading : false, book : true})\n    // }, 3000);\n\n  }\n  render() {\n    //const는 자동적으로 state의 상태를 계속해서 따라가게 된다.\n    const { isLoading, movies } = this.state;\n    //return <div>{isLoading ? \"Loading....\" : \"We are Ready!!!!\"}</div>;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"Loader\">\n            <span className=\"Loader__text\">Loading.....</span>\n          </div>) : (\n            <div className=\"movies\">\n              {movies.map(movie => (\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image} \n                  genres={movie.genres}\n                  />\n              ))}\n            </div>\n\n\n            // : movies.map(movie =>(\n            // // console.log(movie);\n            // <Movie\n            // key={movie.id} \n            // id={movie.id} \n            // year={movie.year} \n            // title={movie.title} \n            // summary={movie.summary} \n            // poster={movie.medium_cover_image} />\n            // )\n\n\n          )}</section>);\n  }\n}\n\nexport default App3;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport App2 from './App2';\nimport App3 from './App3';\n\nReactDOM.render(<App3 />, document.getElementById('root'));\n//ReactDOM.render(<App2 />, document.getElementById('root'));\n//ReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}